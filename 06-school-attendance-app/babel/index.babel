console.clear();


(function() {
  
  /* ======== Model ======== */
  const model = { 
    init: function() {
      if (!localStorage.students) {
        this.students = [
          { name: 'Lilly the Lizard', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Bugs Bunny', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Slappy the Frog', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Bart Simpson', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Charlie Brown', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Popeye', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Eric Cartman', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Daffy Duck', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Scooby-Doo', 
           hasAttendedList: [false, false, false, false, false]
          },
          { name: 'Mickey Mouse', 
           hasAttendedList: [false, false, false, false, false]
          }
        ];
      } else {
        this.students = JSON.parse(localStorage.students);
      }
    }
  };
  
  
  /* ======== Controller ======== */
  const controller = {
    init: function() {
      model.init();
      view.init();
    },
    
    calculateDaysMissed: function(studentIndex) {
      return model.students[studentIndex].hasAttendedList.reduce((total, hasAttended) => {
        if (!hasAttended) { return ++total; } 
        else              { return total; }
      }, 0)
    },
    
    flipOneDayAttendance: function(studentIndex, attendanceIndex) {
      model.students[studentIndex].hasAttendedList = [
        ...model.students[studentIndex].hasAttendedList.slice(0, attendanceIndex),
        !model.students[studentIndex].hasAttendedList[attendanceIndex],
        ...model.students[studentIndex].hasAttendedList.slice(attendanceIndex + 1)
      ];
      
      // Save attendance record to local storage when checkbox is clicked
      localStorage.students = JSON.stringify(model.students);
    }
  };
  
  
  /* ======== View ======== */
  const view = {
    init: function() {
      
      // Select DOM element where the list of students will be mounted
      const tableBodyElement = document.getElementsByTagName('tbody')[0];
      
      // Show students data by looping through their records
      model.students.forEach((student, studentIndex) => {
        let rowElement = document.createElement('tr');
        rowElement.className = 'student';      
        tableBodyElement.appendChild(rowElement);
        
        let nameElement = document.createElement('td');
        nameElement.className = 'name-col';
        nameElement.textContent = student.name;
        rowElement.appendChild(nameElement);
        
        student.hasAttendedList.forEach((hasAttended, attendanceIndex) => {
          let oneDayDataElement = document.createElement('td');
          oneDayDataElement.className = 'attend-col';
          rowElement.appendChild(oneDayDataElement);
          
          let oneDayInputElement = document.createElement('input');
          oneDayInputElement.type = 'checkbox';
          oneDayInputElement.checked = hasAttended;
          oneDayInputElement.addEventListener('click', () => {
            controller.flipOneDayAttendance(studentIndex, attendanceIndex);
            view.updateDaysMissedDisplay(studentIndex);
          })
          oneDayDataElement.appendChild(oneDayInputElement);
        });
        
        // Display the number of missed days
        let daysMissedElement = document.createElement('td');
        daysMissedElement.className = 'missed-col days';
        daysMissedElement.textContent = controller.calculateDaysMissed(studentIndex);
        rowElement.appendChild(daysMissedElement);
      });
    },
    
    // Update the number of missed days being displayed
    updateDaysMissedDisplay: function(studentIndex) {
      const daysMissedElement = document.getElementsByClassName('days')[studentIndex];
      daysMissedElement.textContent = controller.calculateDaysMissed(studentIndex);
    }
  };
  
  controller.init();
  
}());